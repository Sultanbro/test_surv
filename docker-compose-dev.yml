version: '3'
services:
  npm:
    image: node:16-alpine
    container_name: npm
    volumes:
      - .:/var/www
    working_dir: /var/www
    command: sh -c "npm i && npm run watch"
    networks:
      - app-network
    ports:
      - 3000:3000
      - 3001:3001
    mem_limit: 2g
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./deployment/local/php:/usr/local/etc/php/conf.d
    networks:
      - app-network
    mem_limit: 1024m
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
      - "6001:6001"
    volumes:
      - ./:/var/www
      - ./deployment/local/nginx/log:/var/log
      - ./deployment/local/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    mem_limit: 1024m

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: cc
      MYSQL_ROOT_PASSWORD: fX_va98v3432
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/var/lib/mysql/
      - ${PWD}/deployment/local/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
    mem_limit: 12g
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000


  phpmyadmin:
    container_name: 'phpmyadmin'
    image: 'phpmyadmin/phpmyadmin:latest'
    ports:
      - '8081:80'
    environment:
      - 'PMA_HOST=db'
    depends_on:
      - 'db'
    networks:
      - app-network
    mem_limit: 256m

  #Redis Service
  redis:
    image: redis:4.0
    container_name: redis
    ports:
      - "6382:6379"
    networks:
      - app-network
    mem_limit: 128m

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
