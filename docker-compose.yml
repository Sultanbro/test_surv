#Docker Networks
networks:
  app-network:
    name: app-network
    driver: bridge

#Volumes
volumes:
  dbdata:
    name: dbdata
    driver: local
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: unless-stopped
    tty: true
    expose:
      - "9000"
    volumes:
      - .:/var/www/app:delegated
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "7000:80"
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/app:delegated
    depends_on:
      - app
    networks:
      - app-network

  #MySQL Service
  db:
    container_name: mysql
    image: 'mysql/mysql-server:8.0'
    restart: 'no'
    ports:
      - '${FORWARD_DB_PORT:-3307}:3307'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'dbdata:/var/lib/mysql'
      - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
      - './docker/mysql/grant_privileges.sql:/docker-entrypoint-initdb.d/grant_privileges.sql'
    networks:
      - app-network

  npm:
