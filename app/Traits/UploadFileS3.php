<?phpnamespace App\Traits;trait UploadFileS3{    /**     * Upload file to S3 and return relative and temp link     * @param String $path     * @param mixed $file     *     * 'relative' => String     * 'temp' => String     * @return array     */    public function uploadFile(string $path, $file): array    {        $disk = \Storage::disk('s3');        $extension = $file->getClientOriginalExtension();        $fileName = uniqid() . '_' . md5(time()) . '.' . $extension; // a unique file name        $disk->putFileAs($path, $file, $fileName);        $xpath = $path . '/' . $fileName;        return [            'relative' => $xpath,            'temp' => $disk->temporaryUrl(                $xpath, now()->addMinutes(360)            )        ];    }    public function getFile($file): ?string    {        // img poster        $disk = \Storage::disk('s3');        try {            if ($file != '' && $file != null) {                if ($disk->exists($file)) {                    return $disk->temporaryUrl($file, now()->addMinutes(360));                }            }        } catch (\Throwable $e) {            // League \ Flysystem \ UnableToCheckDirectoryExistence        }        return null;    }}